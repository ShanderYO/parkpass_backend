# Generated by Django 2.1.5 on 2020-01-10 20:52

import accounts.validators
import base.validators
from django.db import migrations, models
import django.db.models.deletion
import owners.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('parkings', '0001_initial'),
        ('accounts', '0001_initial'),
        ('base', '0001_initial'),
        ('rps_vendor', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, max_length=63, null=True)),
                ('last_name', models.CharField(blank=True, max_length=63, null=True)),
                ('phone', models.CharField(max_length=15)),
                ('sms_code', models.CharField(blank=True, max_length=6, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('password', models.CharField(default='stub', max_length=255)),
                ('avatar', models.CharField(blank=True, max_length=64, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('display_id', models.IntegerField()),
                ('org_name', models.CharField(blank=True, max_length=255, null=True)),
                ('account_state', models.IntegerField(choices=[(0, 'Disabled'), (1, 'Normal'), (2, 'Test only')], default=1)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('comission', models.FloatField(default=0.02)),
                ('secret', models.CharField(default='stub', max_length=255, unique=True)),
                ('inn', models.CharField(blank=True, max_length=15, null=True, validators=[owners.validators.validate_inn])),
                ('kpp', models.CharField(blank=True, max_length=15, null=True, validators=[owners.validators.validate_kpp])),
                ('bic', models.CharField(blank=True, max_length=15, null=True)),
                ('legal_address', models.CharField(blank=True, max_length=512, null=True)),
                ('actual_address', models.CharField(blank=True, max_length=512, null=True)),
                ('checking_account', models.CharField(blank=True, max_length=64, null=True)),
                ('checking_kpp', models.CharField(blank=True, max_length=15, null=True)),
                ('email_confirmation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.EmailConfirmation')),
                ('test_parking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parking_vendor', to='parkings.Parking')),
                ('test_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.Account')),
            ],
            options={
                'verbose_name': 'Vendor',
                'verbose_name_plural': 'Vendors',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='VendorIssue',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'Type owner'), (2, 'Type vendor')])),
                ('name', models.CharField(max_length=255, validators=[accounts.validators.validate_name])),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(max_length=13, validators=[base.validators.validate_phone_number])),
                ('comment', models.CharField(blank=True, max_length=1023, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VendorSession',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('token', models.CharField(max_length=63)),
                ('expired_at', models.DateTimeField()),
                ('created_at', models.DateField(auto_now_add=True)),
                ('vendor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='vendors.Vendor')),
            ],
            options={
                'ordering': ['-expired_at'],
                'abstract': False,
            },
        ),
    ]
